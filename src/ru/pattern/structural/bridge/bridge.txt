Шаблон Мост (Bridge)
========================================================================================================================
Цель:

Отделить абстракцию от ее реализации таким образом, чтобы мы могли изменять независимо друг от друга и то и другое.
========================================================================================================================
Для чего используется:

Для получения преимуществ наследования без потери гибкости.
========================================================================================================================

Пример использования:

- предотвращение жесткой привязки абстракции к реализации (например, реализацию необходимо выбрать
  во время выполнения программы);
- в будущем мы хотим расширять с помощью подклассов и реализацию и абстракцию;
- если изменения в реализации не должны отражаться на клиентах абстракции;
- для разделения одной реализации между несколькими объектами и не показывать это клиенту.

========================================================================================================================

Конкретные реализации:
Мост (Bridge) -  содержит порождающие методы, которые получают в качестве параметра экземпляр определенного типа,
и возвращают реализацию класса или интерфейса, который делегирует вызовы переданного экземпляра.
Другими словами, мост служит для отделения интерфейса от реализации.
В шаблоне DAO объект DAO, с точки зрения приложения, является мостом.
Приложение использует интерфейс DAO, который не меняется при изменении СУБД.
Также архитектура Java AWT основана на этом паттерне.
Также можно указать как пример LinkedHashMap(LinkedHashSet<K>, List<V>) который возвращает немодифицируемый linked map,
который не клонирует объекты, но использует их.
========================================================================================================================