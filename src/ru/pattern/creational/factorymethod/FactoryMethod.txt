Фабричный метод — это порождающий паттерн проектирования, который определяет общий интерфейс
для создания объектов в суперклассе, позволяя подклассам изменять тип создаваемых объектов.

Создание интерфейса, который создает объект. При этом, выбор того, экземпляр какого класса создавать
остается за классами имплеминтирующими данный интерфейс.

Очень удобен когда планируется меняться конструктор
========================================================================================================================
Для чего используется:

Для делигирования создания экземпляров другому классу.
========================================================================================================================
Пример использования:

- заранее неизвестно, экземпляры, какого класса нужно будет создавать;
- класс спроектирован таким образом, что создаваемые им объекты имеют свойства определенного класса.
========================================================================================================================

Конкретные реализации:
Фабричный метод (Factory method) - содержит порождающие методы, которые возвращают реализацию абстрактного класса
или интерфейса

- java.util.Calendar#getInstance()
- java.util.ResourceBundle#getBundle()
- java.text.NumberFormat#getInstance()
- java.nio.charset.Charset#forName()
- java.net.URLStreamHandlerFactory#createURLStreamHandler(String) (Возвращает один "синглтон" на протокол)

========================================================================================================================

