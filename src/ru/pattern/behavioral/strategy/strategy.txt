Шаблон: Стратегия (Strategy)
========================================================================================================================
Цель:

Взаимозаменяемость семейств классов.
========================================================================================================================
Для чего используется:

Определение семейств классов инкапсулирование каждого из них и организация их взаимозаменяемости.
========================================================================================================================
Пример использования:

- есть несколько родственных классов, которые отличаются поведением;
- необходимо иметь несколько вариантов поведения;
- в классе есть данные, о которых не должен знать клиент;
- с помощью условных операторов в классе определено большое количество возможных поведений.
========================================================================================================================

Конкретные реализации:

Стратегия (Strategy) - имеет возможность вызывать метод у разных реализаций определенного класса,
в то время как эти реализации передаются в качестве параметра.
Это позволяет выбирать алгоритм путем определения соответствующего класса.
Этот шаблон позволяет менять выбранный алгоритм независимо от объектов-клиентов, которые его используют.
- java.util.Comparator#compare(), например, выполняется методом Collections#sort()
- javax.servlet.http.HttpServlet, метод service() и методы doXXX() принимают как параметр HttpServletRequest и
HttpServletResponse реализованный объект должен обработать их, при этом не используя параметры в качестве
переменных экземпляра
- javax.servlet.Filter#doFilter()
========================================================================================================================
Strategy

In Strategy pattern, a class behavior or its algorithm can be changed at run time. This type of design pattern
comes under behavior pattern.
In Strategy pattern, we create objects which represent various strategies and a context object whose
behavior varies as per its strategy object. The strategy object changes the executing algorithm of the context object.